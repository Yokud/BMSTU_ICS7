function main()
    X = [-10.82,-9.27,-9.65,-9.36,-9.27,-11.25,-9.89,-9.26,-11.15,-8.90,-11.02,-8.28,-9.18,-10.16,-10.59,-10.82,-9.05,-9.47,-10.98,-11.50,-8.64,-10.86,-10.76,-11.49,-11.09,-9.33,-9.32,-9.66,-8.79,-10.54,-9.12,-10.40,-8.59,-10.22,-9.06,-10.59,-10.60,-10.25,-9.35,-11.44,-9.81,-9.32,-9.95,-9.33,-10.64,-9.45,-10.99,-10.15,-10.39,-10.36,-10.49,-11.67,-10.00,-10.87,-11.11,-9.68,-10.77,-9.13,-8.62,-10.33,-11.36,-10.24,-9.41,-11.05,-10.15,-9.35,-11.45,-9.87,-10.41,-10.11,-10.84,-11.48,-7.77,-10.79,-9.88,-10.70,-9.07,-9.47,-10.15,-9.93,-11.52,-9.04,-10.93,-10.13,-9.56,-11.39,-9.79,-9.19,-11.09,-9.86,-10.67,-10.26,-9.07,-10.53,-11.24,-10.16,-11.33,-8.76,-8.88,-10.53,-10.12,-8.98,-9.84,-9.90,-10.13,-9.32,-9.31,-9.99,-8.55,-11.64,-11.32,-10.51,-11.71,-10.50,-10.50,-12.20,-11.68,-10.45,-7.88,-10.84];

    % Уровень доверия
    gamma = 0.9;
    % Объем выборки 
    n = length(X);
    % Точечная оценка мат. ожидания
    mu = mean(X);
    % Точечная оценка дисперсии
    s2 = var(X);
    
    % Нижняя граница доверительного интервала для мат. ожидания
    muBot = findMuBot(n, mu, s2, gamma);
    % Верхняя граница доверительного интервала для мат. ожидания
    muTop = findMuTop(n, mu, s2, gamma);
    % Нижняя граница доверительного интервала для дисперсии
    s2Bot = findS2Bot(n, s2, gamma);
    % Верхняя граница доверительного интервала для дисперсии
    s2Top = findS2Top(n, s2, gamma);
    
    % Вывод полученных ранее значений
    fprintf('μ (Выборочное среднее) = %.3f\n', mu);
    fprintf('S^2 (Исправленная выборочная дисперсия) = %.3f\n', s2);
    fprintf('μ_Bot (нижняя граница доверительного интервала для математического ожидания) = %.3f\n', muBot);
    fprintf('μ_Top (верхняя граница доверительного интервала для математического ожидания) = %.3f\n', muTop);
    fprintf('S^2_Bot (нижняя граница доверительного интервала для дисперсии) = %.3f\n', s2Bot);
    fprintf('S^2_Top (верхняя граница доверительного интервала для дисперсии) = %.3f\n', s2Top);
    
    % Создание массивов точечных оценок
    muArray = zeros(1, n);
    s2Array = zeros(1, n);
    % Создание массивов границ доверительных интервалов
    muBotArray = zeros(1, n);
    muTopArray = zeros(1, n);
    s2BotArray = zeros(1, n);
    s2TopArray = zeros(1, n);
    
    for i = 1 : n
        mu = mean(X(1:i));
        s2 = var(X(1:i));
        % Точечная оценка матожидания
        muArray(i) = mu;
        % Точечная оценка дисперсии
        s2Array(i) = s2;
        % Нижняя граница доверительного интервала для матожидания
        muBotArray(i) = findMuBot(i, mu, s2, gamma);
        % Верхняя граница доверительного интервала для матожидания
        muTopArray(i) = findMuTop(i, mu, s2, gamma);
        % Нижняя граница доверительного интервала для дисперсии
        s2BotArray(i) = findS2Bot(i, s2, gamma);
        % Верхняя граница доверительного интервала для дисперсии
        s2TopArray(i) = findS2Top(i, s2, gamma);
    end
    
    % Построение графиков
    plot(1 : n, [(zeros(1, n) + mu)', muArray', muBotArray', muTopArray']);
    xlabel('n');
    ylabel('y');
    legend('$\hat \mu(\vec x_N)$', '$\hat \mu(\vec x_n)$', ...
        '$\underline{\mu}(\vec x_n)$', '$\overline{\mu}(\vec x_n)$', ...
        'Interpreter', 'latex', 'FontSize', 18);
    %axis([0 60 -15 -5]);
    figure;
    plot(1 : n, [(zeros(1, n) + s2)', s2Array', s2BotArray', s2TopArray']);
    %axis([0 n 0 2]);
    xlabel('n');
    ylabel('z');
    legend('$\hat S^2(\vec x_N)$', '$\hat S^2(\vec x_n)$', ...
        '$\underline{\sigma}^2(\vec x_n)$', '$\overline{\sigma}^2(\vec x_n)$', ...
        'Interpreter', 'latex', 'FontSize', 18);
end

% Функция поиска нижней границы доверительного интервала для матожидания
function muBot = findMuBot(n, mu, s2, gamma)
    muBot = mu - sqrt(s2) * tinv((1 + gamma) / 2, n - 1) / sqrt(n);
end

% Функция поиска верхней границы доверительного интервала для матожидания
function muTop = findMuTop(n, mu, s2, gamma)
    muTop = mu + sqrt(s2) * tinv((1 + gamma) / 2, n - 1) / sqrt(n);
end

% Функция поиска нижней границы доверительного интервала для дисперсии
function s2Bot = findS2Bot(n, s2, gamma)
    s2Bot = ((n - 1) * s2) / chi2inv((1 + gamma) / 2, n - 1);
end

% Функция поиска верхней границы доверительного интервала для дисперсии
function s2Top = findS2Top(n, s2, gamma)
    s2Top = ((n - 1) * s2) / chi2inv((1 - gamma) / 2, n - 1);
end

